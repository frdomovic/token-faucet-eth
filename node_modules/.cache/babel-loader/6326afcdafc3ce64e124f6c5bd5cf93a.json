{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/token-faucet-eth/src/components/Faucet.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nconst Faucet = props => {\n  _s();\n\n  const [balance, setBalance] = useState();\n  const [showBalance, setShowBalance] = useState(false);\n\n  async function getBalance() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const [account] = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, provider);\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n      setBalance(balance.toString());\n      setShowBalance(true);\n    }\n  }\n\n  async function faucet() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const account = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n      contract.faucet(account[0], 100);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        background: \"rgba(227, 104, 222, 0.71)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          children: \"recieve faucet ERC20 to your wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: faucet,\n            children: \"get faucet token!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: getBalance,\n            variant: \"warning\",\n            children: \"check my balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Faucet, \"08rNwggATGEvr50ovTZa/jktNDA=\");\n\n_c = Faucet;\nexport default Faucet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Faucet\");","map":{"version":3,"sources":["/home/chill/Desktop/token-faucet-eth/src/components/Faucet.js"],"names":["useState","ethers","Card","Button","tokenAddress","Faucet","props","balance","setBalance","showBalance","setShowBalance","getBalance","window","ethereum","account","request","method","provider","providers","Web3Provider","contract","Contract","tokenContract","abi","balanceOf","console","log","toString","faucet","signer","getSigner","background"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,YAAY,GAAG,4CAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;;AAEA,iBAAeW,UAAf,GAA4B;AAC1B,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,CAACC,OAAD,IAAY,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC9CC,QAAAA,MAAM,EAAE;AADsC,OAAxB,CAAxB;AAGA,YAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMO,QAAQ,GAAG,IAAInB,MAAM,CAACoB,QAAX,CACfjB,YADe,EAEfE,KAAK,CAACgB,aAAN,CAAoBC,GAFL,EAGfN,QAHe,CAAjB;AAKA,YAAMV,OAAO,GAAG,MAAMa,QAAQ,CAACI,SAAT,CAAmBV,OAAnB,CAAtB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBnB,OAAO,CAACoB,QAAR,EAAzB;AACAnB,MAAAA,UAAU,CAACD,OAAO,CAACoB,QAAR,EAAD,CAAV;AACAjB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF;;AAED,iBAAekB,MAAf,GAAwB;AACtB,QAAI,OAAOhB,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMC,OAAO,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC5CC,QAAAA,MAAM,EAAE;AADoC,OAAxB,CAAtB;AAGA,YAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMgB,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;AACA,YAAMV,QAAQ,GAAG,IAAInB,MAAM,CAACoB,QAAX,CACfjB,YADe,EAEfE,KAAK,CAACgB,aAAN,CAAoBC,GAFL,EAGfM,MAHe,CAAjB;AAKAT,MAAAA,QAAQ,CAACQ,MAAT,CAAgBd,OAAO,CAAC,CAAD,CAAvB,EAA4B,GAA5B;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEH,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEjB,UAAjB;AAA6B,YAAA,OAAO,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CArDD;;GAAMN,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nconst tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nconst Faucet = (props) => {\n  const [balance, setBalance] = useState();\n  const [showBalance, setShowBalance] = useState(false);\n\n  async function getBalance() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const [account] = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(\n        tokenAddress,\n        props.tokenContract.abi,\n        provider\n      );\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n      setBalance(balance.toString());\n      setShowBalance(true);\n    }\n  }\n\n  async function faucet() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const account = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(\n        tokenAddress,\n        props.tokenContract.abi,\n        signer\n      );\n      contract.faucet(account[0], 100);\n    }\n  }\n  return (\n    <div>\n      <Card style={{ background: \"rgba(227, 104, 222, 0.71)\" }}>\n        <Card.Body>\n          <Card.Subtitle>recieve faucet ERC20 to your wallet</Card.Subtitle>\n          <br></br>\n          <div className=\"d-grid gap-2\">\n            <Button onClick={faucet}>get faucet token!</Button>\n            <Button onClick={getBalance} variant=\"warning\">\n              check my balance\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Faucet;\n"]},"metadata":{},"sourceType":"module"}